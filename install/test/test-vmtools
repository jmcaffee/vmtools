#!/usr/bin/env bash
##############################################################################
# File::    test-vmtools
# Purpose:: Test vmtools library functions
# 
# Author::    Jeff McAffee 08/23/2012
# Copyright:: Copyright (c) 2012, kTech Systems LLC. All rights reserved.
# Website::   http://ktechsystems.com
##############################################################################

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
TARGET_SRC_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )/.." && pwd )"
TARGET_PATH=$TARGET_SRC_DIR/opt/vmtools/bin/__vmtools.sh
source $TARGET_PATH
source $SCRIPT_DIR/helpers

describe "function required_uid"
    describe "when UID is requested"
      if ( is_linux_os ); then
        describe "when OS is linux"
            
            # :before

            it "should return UID 0"
                expected=0
                actual=$(required_uid)
                if [[ $actual == $expected ]]; then
                    pass
                else
                    fail "Actual ($actual) != Expected ($expected)"
                fi
            end_it # should ...
        end_describe # when ...
      else
        describe "when OS is windows"
            it "should return UID 500"
                expected=500
                actual=$(required_uid)
                if [[ $actual == $expected ]]; then
                    pass
                else
                    fail "Actual ($actual) != Expected ($expected)"
                fi
                  
            end_it # should return UID 500
              
        end_describe # when OS is windows
      fi
        
    end_describe # when ...

end_describe # required_uid


describe "function is_vm_running"
            describe "when a VM is running"
                    it "should return true"
                            expected=true
                            actual=$(is_vm_running "test")
                            if [[ "$actual" != "$expected" ]]; then
                                fail "Actual ($actual) != Expected ($expected)"
                            else
                                pass
                            fi
                    end_it # should return true

            end_describe # when a VM is running

end_describe # function is_vm_running


describe "With is_linux()"
  if ( is_linux_os ); then
    describe "when current system is linux"

        # :before
        somevar="someval"
        
        it "should return true"
        if ( is_linux ); then
          pass
        else
          fail
        fi
        end_it # should return true

    end_describe # when current system is linux
  else

    describe "when current system is windows"

        it "should return false"
        if ( is_linux ); then
          fail
        else
          pass
        fi
        end_it # should return false

    end_describe # when current system is windows
  fi

end_describe # With is_linux()


describe "With is_admin()"
  if ( ! is_linux_os ); then
    describe "when OS is windows"
      describe "when UID is 500"
          it "should return true"
            if [ $UID -eq 500 ]; then
              if ( is_admin ); then
                  pass
              else
                fail
              fi
            else
              if ( is_admin ); then
                  fail
              else
                pass
              fi
            fi
          end_it # should return true
            
      end_describe # when $UID is 500
          
    end_describe # when OS is windows
  else
    
    describe "when OS is linux"
      describe "when UID is 0"
          it "should return true"
            if [ $UID -eq 0 ]; then
              if ( is_admin ); then
                  pass
              else
                fail
              fi
            else
              if ( is_admin ); then
                  fail
              else
                pass
              fi
            fi
          end_it # should return true

      end_describe # when $UID is 0

    end_describe # when OS is linux
  fi
    
      
end_describe # With is_admin()

