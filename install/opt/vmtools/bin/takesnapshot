#!/usr/bin/env bash
##############################################################################
# File::    takesnapshot
# Purpose:: Take a snapshot of a VM
# 
# Author::    Jeff McAffee 08/23/2012
# Copyright:: Copyright (c) 2012, kTech Systems LLC. All rights reserved.
# Website::   http://ktechsystems.com
##############################################################################

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

##############################################
# Functions
#

source $SCRIPT_DIR/__vmtools.sh


usage() {
  echo "Usage: sudo `basename $0` {vm-name} [snapshot-name]"
  echo "       snapshot-name      default: snapshot-YYYY-MM-DD"
}

##############################################
# Validation Checks
#

# Check if user has sudo privledges.
if ( ! is_admin ); then
    echo "Must run as sudo or root."
    usage
    exit $E_NOTAUTHORIZED
fi

# Check for proper number of command line args.
expected_args=1
if [ $# -ne $expected_args ]
then
    usage
    exit $E_BADARGS
fi

##############################################
# Variables
#

vm_name=$1
dt=$( date +%Y-%m-%d )
dt_name="snapshot-$dt"
snap_name=${2:-$dt_name}               # Default to 'snapshot-YYYY-MM-DD'


##############################################
# Pause VM if running
#

if ( (is_vm_running $vm_name) ); then
    echo "  Pausing VM prior to snapshot"
    (VBoxManage controlvm $vm_name pause)
    vm_is_paused=true
else
    vm_is_paused=false
fi


##############################################
# Take a snapshot
#

if ( (VBoxManage snapshot $vm_name take $snap_name) ); then
  echo "Snapshot taken: $snap_name"
else
  echo "Error: There was a problem taking the snapshot"
fi


##############################################
# Resume VM if paused
#

if [[ $vm_is_paused == true ]]; then
    echo "  Resuming VM post snapshot"
    (VBoxManage controlvm $vm_name resume)
fi
