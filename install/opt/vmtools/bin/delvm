#!/usr/bin/env bash
##############################################################################
# File::    delvm
# Purpose:: Unregister and delete a VM
# 
# Author::    Jeff McAffee 08/21/2012
# Copyright:: Copyright (c) 2012, kTech Systems LLC. All rights reserved.
# Website::   http://ktechsystems.com
##############################################################################

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

##############################################
# Functions
#

source $SCRIPT_DIR/__vmtools.sh


# Local Functions

usage() {
  echo "Usage: sudo `basename $0` {vm-name}"
}

# Check if user has sudo privledges.
if ( ! is_admin ); then
    echo "Must run as sudo or root."
    usage
    exit $E_NOTAUTHORIZED
fi

# Check for proper number of command line args.
expected_args=1
if [ $# -ne $expected_args ]
then
    usage
    exit $E_BADARGS
fi

##############################################
# Delete VM
#

# Delete a VM
(VBoxManage unregistervm $1 --delete)


##############################################
# Clean up other files
#

# Remove the upstart conf file if it exists.
upstart_conf = "/etc/init/vm-$1.conf"
if [ -f $upstart_conf ]; then
  echo "removing $upstart_conf"
  rm $upstart_conf
else
  echo "not found: $upstart_conf"
fi

# Remove the remote upstart conf file if it exists.
upstart_conf = "/etc/init/vm-$1-rd.conf"
if [ -f $upstart_conf ]; then
  echo "removing $upstart_conf"
  rm $upstart_conf
else
  echo "not found: $upstart_conf"
fi

vm_root=$(vm_root_dir $1)
if [ -d $vm_root ]; then
    echo "Deleting dir: $vm_root"
    #rm -r $vm_root
fi
